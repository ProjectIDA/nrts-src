#! /bin/tcsh
#
if ($#argv != 1) then
  echo ""
  echo "  ========================="
  echo "  usage: r2q_send jdate"
  echo "  example: r2q_send 2014350"
  echo "  ========================="
  echo ""
  echo "  r2q_send is to send mini-SEED data stored in /ida/tmp/daily/miniseed/[jdate] to DMC."
  echo "  These mini-SEED data are generated by 'r2q_proc' for a given station on a given day."
  echo ""
  echo "  r2q_send uses 'miniseed2dmc', a DMC program, to transfer data to DMC and monitor"
  echo "  the transferring process."
  echo ""
  echo "  miniseed2dmc, according to its man page, is to 'transfers selected Mini-SEED data"
  echo "  records from the local computer to a remote Data Managment Center.'  Users will need"
  echo "  to contact DMC to get assigned host and port for such transfering before using it."
  echo ""
  echo "  IDA has been assigned to use port 16105 for sending files to ringsub.iris.washington.edu"
  echo ""
  echo "  To keep track the status of data transmission, miniseed2dmc creates a statefile in a local"
  echo "  working directory.  It also creates a SYNC file in the same directory to display/track the"
  echo "  data coverage of the transferred mini-SEED data.  The name of SYNC file contains the"
  echo "  connection start and end times when the data was sent.  For examples:"
  echo ""
  echo "     2014-10-28T10:36:25--2014-10-28T10:36:25.sync"
  echo "     2014-10-27T09:54:13--2014-10-27T09:54:13.sync"
  echo ""
  echo "  Natually, each run of r2q_send, ie miniseed2dmc, will create a SYNC file and a statefile."
  echo ""
  echo "  Several options can be used with miniseed2dmc:"
  echo "  -p is to pretend, process input as usual and write the state and SYNC files but do NOT connect or send files."
  echo "  -r 0 is to search mini-SEED data in the given directory and '0' means subdirectories will not be searched."
  echo "  -l is to specify an ASCII file containing mini-SEED data files to be sent to DMC."
  echo "  -w is to specify a working directory other than the current directory for storing statefiles and SYNC files."
  echo "  -S is to name a statefile different from the default, 'statefile'."
  echo ""
  echo "  NOTE:"
  echo "   1.  For some reason, the statefile is not written to the directory specified with -w."
  echo "       So we cd to the directory where the sync files will be written and stored." 
  echo "   2.  In general, '-r 0 /ida/tmp/daily/miniseed/[jdate]' would be preferred for sending files to DMC."
  echo "       However, since we don't plan to send XPFO data (which could be part of r2q_proc process) to DMC,"
  echo "       we use -l with a list of files to send instead."
  echo ""
  echo "   examples:"
  echo "      % miniseed2dmc -p -w syncdir -S statefile.jdate host:port -r 0 dir"
  echo "      % miniseed2dmc -p -w syncdir -S statefile.jdate host:port -l flist" 
  echo ""
  echo "  At IDCDCC, when r2q_send is executed successfully, mini-SEED data in /ida/tmp/daily/miniseed/[jdate]"
  echo "  will be moved to a subdirectory DONE/, ie /ida/tmp/daily/miniseed/[jdate]/DONE."
  echo "  The statefile will be copied to /ida/tmp/daily/SYNC/DONE.statefile for future reference, if necessary."
  echo "  The SYNC files will be kept in /ida/tmp/daily/SYNC for a week and then forwarded to DMC's engine_room,"
  echo "  engine_room@iris.washington.edu by a cronjob.  See r2q_sync for details."
  echo ""
  echo "  If newer/better mini-SEED data become available later, they will replace the existing ones in DONE/."
  echo ""
  echo "  For details about miniseed2dmc, please see its man page, 'man miniseed2dmc'."
  echo ""
  echo ""
  exit
endif


#
# directory contains mini-SEED data
# 
set jdate = $1
set dir   = /ida/tmp/daily/miniseed/$jdate

#
# host and port are assigned by DMC
#
set host  = ringsub.iris.washington.edu
set port  = 16105

set syncdir = /ida/tmp/daily/SYNC

# for some reason -S does not work well with -w, so let's just cd to syncdir
cd $syncdir

#
#if (-f statefile.$jdate) then
#  echo "" 
#  echo r2q_send: ERROR - statefile.$jdate exists at $syncdir, please remove it first.
#  echo "" 
#  exit 1
#endif

#
# -p is to pretend, process input as usual and write the state and SYNC files but do NOT connect or send files.
# -r 0 is to search mini-SEED data in the given directory and '0' means subdirectories will not be searched.
# -l is to specify an ASCII file containing mini-SEED files to be sent to DMC.
# -w is to specify a working directory other than the current directory for storing statefiles and SYNC files.
# -S is to name a statefile different from the default, 'statefile'.
#

rm -f /tmp/list.$$
ls $dir/*.ms | grep -v XPFO > /tmp/list.$$
rm -f /tmp/ms2dmc.log.$$ 

echo miniseed2dmc -w $syncdir -S statefile.$jdate "$host":"$port" -l /tmp/list.$$
     miniseed2dmc -w $syncdir -S statefile.$jdate "$host":"$port" -l /tmp/list.$$ >& /tmp/ms2dmc.log.$$

#
# If everything is sent, move files around and clean it
#   1. move all .ms files into $dir/DONE/
#   2. move db/ (from running r2q_view) into $dir/DONE/ 
#   3. move statefile into $syncdir/DONE.statefile
#   4. move running log, /tmp/ms2dmc.log.$$ r2q_send.log into $syncdir/DONE.statefile/r2q_send.log.$jdate
#
# Otherwise, leave everything in place
#

grep "All data transmitted" /tmp/ms2dmc.log.$$

if ($status == 0) then			# yes, all data sent to DMC, move them to DONE
  set flag = 'DONE'
  # move ms files
  if (! -d $dir/DONE) mkdir -p $dir/DONE	# make DONE/ first

  echo "r2q_send: Moving Miniseed files into DONE..."
  \mv $dir/*.ms $dir/DONE		# MOVE/REPLACE ms files in DONE/

  echo "r2q_send: Moving db directory into DONE..."
  if (-d $dir/db) then
    if (! -d $dir/DONE/db) then
      mv $dir/db $dir/DONE		# MOVE the entire db/ into DONE/
    else
      \mv $dir/db/* $dir/DONE/db	# REPLACE wfdisc and other database files in the existing db
      rmdir $dir/db
    endif
  endif

  echo "r2q_send: Updating DONE_Summary.txt..." 
  msi -tg -Q -tf 2 $dir/DONE/*.ms | awk '{print $1 ", " $2 ", " $3 ", " $5}' > $dir/DONE/summary.csv

  # move statefile
  if (-f $syncdir/DONE.statefile/statefile.$jdate) then
    cat $syncdir/statefile.$jdate >> $syncdir/DONE.statefile/statefile.$jdate
    rm -f $syncdir/statefile.$jdate
  else
    mv $syncdir/statefile.$jdate $syncdir/DONE.statefile
  endif

  if (-f $syncdir/DONE.statefile/r2q_send.log.$jdate) then
    cat /tmp/ms2dmc.log.$$ >> $syncdir/DONE.statefile/r2q_send.log.$jdate
  else
    cp -p /tmp/ms2dmc.log.$$ $syncdir/DONE.statefile/r2q_send.log.$jdate 
  endif
else
  set flag = 'ERROR'
endif

set admin = 'ezak@ucsd.edu,dauerbach@ucsd.edu'
Mail -s "miniseed2dmc $jdate status:$flag" $admin < /tmp/ms2dmc.log.$$

rm /tmp/list.$$ /tmp/ms2dmc.log.$$

exit
