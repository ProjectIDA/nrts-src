#!/bin/csh -f
#
# Backup the files needed to "personify" a station.or a 'hub' system

set output = /dev/null/nothing # so failure has something to delete
set myname = bkpersona

# General setup

set setup  = ~nrts/scripts/ScriptSetup
if (! -e $setup ) then
    echo "missing $setup"
    goto failure
endif
source $setup
set SiteList = "$SystemsList"

# Command line setup

if ($#argv == 0) then
    set outdir = $NRTS_HOME/tmp
else if ($#argv == 1) then
    set outdir = $argv
else
    echo "usage: $myname [ output directory ]"
endif

if (! -d $outdir) then
    echo "${outdir}: No such directory"
    goto failure
endif

# Generate output path

set today    = `date -u +%Y-%m-%d`
set nodename = `uname -n`
set output   = $outdir/$nodename-$today.tgz
if (-e $output) rm -rf $output

# OS specific files

set os = `uname`
switch ($os)
  case FreeBSD:
    set candidate = "etc/rc.conf"
    set candidate = "$candidate etc/rc.local"
    set candidate = "$candidate etc/resolv.conf"
    set candidate = "$candidate etc/ntp.conf"
    set candidate = "$candidate etc/hosts"
    set candidate = "$candidate etc/motd"
    set candidate = "$candidate etc/ssh/*key*"
    breaksw
  case SunOS:
    set candidate = "etc/rc0.d"
    set candidate = "$candidate etc/rc1.d"
    set candidate = "$candidate etc/rc2.d"
    set candidate = "$candidate etc/rc3.d"
    set candidate = "$candidate etc/rcS.d"
    set candidate = "$candidate etc/init.d"
    set candidate = "$candidate etc/hosts.allow"
    set candidate = "$candidate etc/hosts.deny"
    set candidate = "$candidate etc/hostname*"
    set candidate = "$candidate etc/inet"
    set candidate = "$candidate etc/netmasks"
    set candidate = "$candidate etc/nodename"
    set candidate = "$candidate opt/realport/drp.conf"
    breaksw
  case Linux:
    echo "==================================================================================="
    echo " WARNING: "
    echo "          This is intended to perform a backup of IDA/NRTS customizations"
    echo "          of a RedHat/CentOS/Fedora IDAHUB-like system. It should NOT be used to restore a"
    echo "          live system without further work."
    echo "==================================================================================="
    set candidate = "etc/motd"
    set candidate = "$candidate etc/resolv.conf"
    set candidate = "$candidate etc/ntp.conf"
    set candidate = "$candidate etc/hosts"
    set candidate = "$candidate etc/motd"
    set candidate = "$candidate etc/sudoers"
    set candidate = "$candidate etc/rsyslog.d"
    set candidate = "$candidate etc/fstab"
    set candidate = "$candidate etc/exports"
    set candidate = "$candidate etc/ssh/*key*"
    set candidate = "$candidate var/spool/cron"
    breaksw
  default:
    echo "'$os' is not a supported operating system."
    exit 1
    breaksw
endsw

# NRTS files
set nrts = usr/nrts

set candidate = "$candidate $nrts/etc"
set candidate = "$candidate $nrts/.vim"
set candidate = "$candidate $nrts/.vimrc"
set candidate = "$candidate $nrts/.cshrc"
set candidate = "$candidate $nrts/.tcshrc"
set candidate = "$candidate $nrts/.bash*"
set candidate = "$candidate $nrts/.aliases"
set candidate = "$candidate $nrts/.envrc"
set candidate = "$candidate $nrts/.pathrc"
set candidate = "$candidate $nrts/.platform"
set candidate = "$candidate $nrts/.ssh"
set candidate = "$candidate $nrts/.tunnel/.ssh"   # NOTE: only valid on IDAHUB-like system accepting ssh tunnel sessions
set candidate = "$candidate $nrts/CTBTO/config"   # NOTE: only valid on IDAHUB-like systems willbe packing up ctbto data for AFTAC
set candidate = "$candidate $nrts/CTBTO/StartCD"
set candidate = "$candidate $nrts/SeedLink/ring.conf"
foreach site ($SystemsList)
    set candidate = "$candidate $nrts/$site/cnf"
    set candidate = "$candidate $nrts/$site/iso/config"
end

# Do the backup

cd /
set list = ""
foreach item ($candidate)
    if (-e $item) set list = "$list $item"
end

if (`whoami` != root) then
    set sudo = sudo
else
    set sudo = ""
endif

$sudo tar cf - $list | gzip -c > $output

if ($status != 0) goto failure

echo "Files backed up to $output"
exit 0

failure:

echo "Files NOT backed up"
rm -f $output
exit 1

